#!/usr/bin/python

import re, sys, os, glob, fnmatch, codecs, chardet
from types import *

REGEX = re.compile('/\*(.|[\r\n]|\n)*?\*/')

def print_help():
  print """ Usage: ./license-updater directory filetype newlicense [--dryrun]
  example: ./license-updater /home/user/project *.php license.txt"""
  exit()
  
def read_license_file(filename):
  FILE = open(filename, "r")
  return FILE.read()
  FILE.close()
  
 
def replace_in_dir(path, filetype, licensetext):
  if(os.path.isdir(path) == False):
    if fnmatch.fnmatch(fp, filetype):
      replace_in_file(path, licensetext)
    return 
  for f in os.listdir(path):
    fp = os.path.join(path,f)
    if os.path.isdir(fp):
      replace_in_dir(fp, filetype, licensetext)
    elif fnmatch.fnmatch(fp, filetype):
      replace_in_file(fp, licensetext)
    
def replace_in_file(filename, licensetext):
  #print "INFO: Processing file: " + filename
  # detect file encoding
  dataf = open(filename, 'r')
  data = dataf.read()
  dataf.close()
  result = chardet.detect(data)
  charenc = result['encoding']
  if charenc == "UTF-8":
    charenc = "utf-8-sig"
  
  # open the file for reading
  FILE = codecs.open(filename, 'r', charenc)
  if FILE.encoding == None:
    print "ERROR: could not open file: " + filename
    return
  contents = FILE.read()
  FILE.close()

  m = REGEX.search(contents)
  if m == None or type(m) is NoneType:
    print "WARNING: did not find match in: " + filename + " enc: " + charenc
    FILE.close()
    return;
  
  # Update the contents
  contents_updated = contents.replace(m.group(0), licensetext);
  
  # Overwrite the file
  FILEW = codecs.open(filename, 'w', charenc)
  FILEW.seek(0)
  FILEW.write(contents_updated)
  FILEW.close()
  
def main():
  if len(sys.argv) < 3:
    print_help()
  directory = sys.argv[1];
  filetype = sys.argv[2];
  licensetext = read_license_file(sys.argv[3])
  replace_in_dir(directory, filetype, licensetext)

if __name__ == "__main__":
    main()
    
